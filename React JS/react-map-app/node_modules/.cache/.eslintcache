[{"/home/divum/Desktop/Workspace/GitHub1122/React JS/react-map-app/src/index.js":"1","/home/divum/Desktop/Workspace/GitHub1122/React JS/react-map-app/src/App.jsx":"2","/home/divum/Desktop/Workspace/GitHub1122/React JS/react-map-app/src/components/MyMap.jsx":"3","/home/divum/Desktop/Workspace/GitHub1122/React JS/react-map-app/src/components/MapPopUp/index.jsx":"4"},{"size":255,"mtime":1692864379115,"results":"5","hashOfConfig":"6"},{"size":383,"mtime":1694150856032,"results":"7","hashOfConfig":"6"},{"size":3830,"mtime":1694163844513,"results":"8","hashOfConfig":"6"},{"size":633,"mtime":1694150809832,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"hheuti",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/divum/Desktop/Workspace/GitHub1122/React JS/react-map-app/src/index.js",[],[],[],"/home/divum/Desktop/Workspace/GitHub1122/React JS/react-map-app/src/App.jsx",["25"],[],"import React from \"react\";\nimport \"./App.css\";\nimport MyMap from \"./components/MyMap\";\nimport \"./components/MyMap.css\";\nimport MapPopUp from \"./components/MapPopUp\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"nav\">\n        <h2 >My Map Application</h2>\n      </div>\n        {/* <MapPopUp/> */}\n        <MyMap />\n    </div>\n  );\n}\n\nexport default App;\n","/home/divum/Desktop/Workspace/GitHub1122/React JS/react-map-app/src/components/MyMap.jsx",["26","27","28","29","30","31","32"],[],"import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Map, {\r\n  NavigationControl,\r\n  Marker,\r\n  GeolocateControl,\r\n  FullscreenControl,\r\n  ScaleControl,\r\n  MapProvider,\r\n  Popup,\r\n  useMap,\r\n  AttributionControl,\r\n} from \"react-map-gl\";\r\nimport maplibregl from \"maplibre-gl\";\r\nimport \"maplibre-gl/dist/maplibre-gl.css\";\r\n//\r\nimport { Source, Layer } from \"react-map-gl/maplibre\";\r\nimport { CircleLayer } from \"react-map-gl/maplibre\";\r\nimport { FeatureCollection } from \"geojson\";\r\n\r\nconst MyMap = () => {\r\nconst geojson = {\r\n  type: \"FeatureCollection\",\r\n  features: [\r\n    {\r\n      type: \"Feature\",\r\n      geometry: { type: \"Point\", coordinates: [ 77.687524,12.942786 ] },\r\n    },\r\n  ],\r\n};\r\nconst layerStyle = {\r\n  id: \"point\",\r\n  type: \"circle\",\r\n  paint: {\r\n    \"circle-radius\": 10,\r\n    \"circle-color\": \"red\",\r\n  },\r\n};\r\n//\r\n  const [showPopup, setShowPopup] = useState(true);\r\n  const [location, setLocation] = useState({\r\n    latitude: 12.958184,\r\n    longitude: 77.6421466,\r\n  });\r\n  useEffect(() => {\r\n    const success = (position) => {\r\n      setLocation({\r\n        latitude: position.coords.latitude,\r\n        longitude: position.coords.longitude,\r\n      });\r\n    };\r\n    const error = () => {\r\n      console.log(\"Error while accessing location...\");\r\n    };\r\n    navigator.geolocation.getCurrentPosition(success, error);\r\n    console.log(location.lat, location.lng);\r\n  }, []);\r\n  const clickLoc = () => {\r\n    document.getElementsByClassName(\"maplibregl-ctrl-geolocate\")[0].click();\r\n    console.log(location);\r\n  };\r\n  window.onload = clickLoc;\r\n  return (\r\n    <div className=\"MyMap\">\r\n      <Map\r\n        id=\"mymap\"\r\n        mapLib={maplibregl}\r\n        initialViewState={{\r\n          latitude: location.latitude,\r\n          longitude: location.longitude,\r\n          zoom: 10,\r\n        }}\r\n        style={{ width: \"100%\", height: \"100%\" }}\r\n        mapStyle=\"https://api.maptiler.com/maps/streets-v2/style.json?key=MHdzunc1wzN53Dd2CzRS\"\r\n      >\r\n        <Marker latitude={location.latitude} longitude={location.longitude+0.1} color=\"red\"></Marker>\r\n        <Marker\r\n          latitude={location.latitude + 0.1}\r\n          longitude={location.longitude + 0.1}\r\n          color=\"white\"\r\n        ></Marker>\r\n        {/* <Marker latitude={12.942786} longitude={77.687524} color=\"red\"></Marker> */}\r\n        {/* <Marker\r\n          latitude={10.942786}\r\n          longitude={77.687524}\r\n          color=\"blue\"\r\n        ></Marker> */}\r\n        <NavigationControl />\r\n        <GeolocateControl showAccuracyCircle={false} />\r\n        <FullscreenControl />\r\n        <ScaleControl />\r\n        <Popup\r\n          latitude={location.latitude}\r\n          longitude={location.longitude}\r\n          anchor=\"bottom\"\r\n          closeButton={false}\r\n          closeOnClick={false}\r\n        >\r\n          You are here\r\n        </Popup>\r\n        {/* <Popup\r\n          latitude={location.latitude}\r\n          longitude={location.longitude+0.1}\r\n          anchor=\"top\"\r\n          closeButton={false}\r\n          closeOnClick={false}\r\n        >\r\n          Cab 1\r\n        </Popup> */}\r\n        <Popup\r\n          latitude={location.latitude + 0.1}\r\n          longitude={location.longitude + 0.1}\r\n          anchor=\"bottom\"\r\n          closeButton={false}\r\n          closeOnClick={false}\r\n          className=\"cab-2\"\r\n        >\r\n          Cab 2\r\n        </Popup>\r\n        <NavigateButton />\r\n        <Source id=\"my-data\" type=\"geojson\" data={geojson}>\r\n          <Layer {...layerStyle} />\r\n        </Source>\r\n      </Map>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction NavigateButton() {\r\n  const { current: map } = useMap();\r\n\r\n  const onClick = () => {\r\n    map.flyTo({ center: [-122.4, 37.8] });\r\n  };\r\n\r\n  return (\r\n    <button onClick={onClick} className=\"go-btn\">\r\n      Go\r\n    </button>\r\n  );\r\n}\r\nexport default MyMap;\r\n","/home/divum/Desktop/Workspace/GitHub1122/React JS/react-map-app/src/components/MapPopUp/index.jsx",[],[],{"ruleId":"33","severity":1,"message":"34","line":5,"column":8,"nodeType":"35","messageId":"36","endLine":5,"endColumn":16},{"ruleId":"33","severity":1,"message":"37","line":9,"column":3,"nodeType":"35","messageId":"36","endLine":9,"endColumn":14},{"ruleId":"33","severity":1,"message":"38","line":12,"column":3,"nodeType":"35","messageId":"36","endLine":12,"endColumn":21},{"ruleId":"33","severity":1,"message":"39","line":18,"column":10,"nodeType":"35","messageId":"36","endLine":18,"endColumn":21},{"ruleId":"33","severity":1,"message":"40","line":19,"column":10,"nodeType":"35","messageId":"36","endLine":19,"endColumn":27},{"ruleId":"33","severity":1,"message":"41","line":40,"column":10,"nodeType":"35","messageId":"36","endLine":40,"endColumn":19},{"ruleId":"33","severity":1,"message":"42","line":40,"column":21,"nodeType":"35","messageId":"36","endLine":40,"endColumn":33},{"ruleId":"43","severity":1,"message":"44","line":57,"column":6,"nodeType":"45","endLine":57,"endColumn":8,"suggestions":"46"},"no-unused-vars","'MapPopUp' is defined but never used.","Identifier","unusedVar","'MapProvider' is defined but never used.","'AttributionControl' is defined but never used.","'CircleLayer' is defined but never used.","'FeatureCollection' is defined but never used.","'showPopup' is assigned a value but never used.","'setShowPopup' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'location.lat' and 'location.lng'. Either include them or remove the dependency array.","ArrayExpression",["47"],{"desc":"48","fix":"49"},"Update the dependencies array to be: [location.lat, location.lng]",{"range":"50","text":"51"},[1414,1416],"[location.lat, location.lng]"]